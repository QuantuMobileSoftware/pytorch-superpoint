data:
    dataset: 'CrossDomain'
    # dataset: "Coco"

    labels: logs/trash/predictions
    # labels: logs/export_magicpoint_crossdomain_nooam_lowthresh/predictions
    # labels: logs/export_magicpoint_crossdomain/predictions
    # labels: logs/huh/predictions
    # labels: logs/magicpoint_synth_homoAdapt_coco_crossdomain/predictions  # cross domain

    gaussian_label:
        enable: true
        params:
            GaussianBlur: {sigma: 0.2}

    single_domain: false
    # single_domain: true

    cache_in_memory: false
    preprocessing:
        resize: [240, 320]
        # resize: [480, 640]

    warped_pair:
        enable: true
        params:
            translation: true
            rotation: true
            scaling: true
            perspective: true
            scaling_amplitude: 0.2
            perspective_amplitude_x: 0.1
            perspective_amplitude_y: 0.1
            patch_ratio: 0.85
            max_angle: 1.57
            allow_artifacts: true
        valid_border_margin: 3

front_end_model: 'Train_model_heatmap'  # 'Train_model_frontend'

training:
    workers_train: 8
    workers_val: 8

model:
    name: 'SuperPointNet_gauss2'
    params: {
    }
    detector_loss:
        loss_type: 'softmax'


    batch_size: 16
    eval_batch_size: 16
    learning_rate: 0.01 # 0.0001
    detection_threshold: 0.05 # 0.015
    lambda_loss: 1
    nms: 4
    dense_loss:
        enable: false
        params:
            descriptor_dist: 4 # 4, 7.5
            lambda_d: 800
    sparse_loss:
        enable: true
        params:
            num_matching_attempts: 1000
            num_masked_non_matches_per_match: 100
            lamda_d: 1
            dist: 'cos'
            method: '2d'
    other_settings: 'train 2d, gauss 0.2'


retrain: True # set true for new model
reset_iter: True # set true to set the iteration number to 0
train_iter: 10000  # 200000
validation_interval: 500 # 2000
tensorboard_interval: 250 # 200
save_interval: 500 # 2000
validation_size: 500
skip_val_on_iter0: false

# pretrained:
pretrained: 'logs/magicpoint_synth_t2/checkpoints/superPointNet_100000_checkpoint.pth.tar'
# pretrained: 'logs/superpoint_coco_single_domain/checkpoints/superPointNet_170400_checkpoint.pth.tar'
# pretrained: 'logs/superpoint_bigbigstep_onecycle/checkpoints/superPointNet_5000_checkpoint.pth.tar'
